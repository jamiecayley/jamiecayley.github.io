<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-07-18T12:59:03+01:00</updated><id>http://localhost:4000/</id><title type="html">Jamie Calley</title><subtitle>A blog about technology and stuff related</subtitle><entry><title type="html">Abstract Algebra Guide</title><link href="http://localhost:4000/Abstract-Algebra/" rel="alternate" type="text/html" title="Abstract Algebra Guide" /><published>2017-07-18T00:00:00+01:00</published><updated>2017-07-18T00:00:00+01:00</updated><id>http://localhost:4000/Abstract-Algebra</id><content type="html" xml:base="http://localhost:4000/Abstract-Algebra/"></content><author><name>jamie</name></author><category term="project" /><category term="math" /><summary type="html"></summary></entry><entry><title type="html">Mutation Conservation in Mendelian Genes</title><link href="http://localhost:4000/Mutation-Conversation-in-Mendelian-Genes/" rel="alternate" type="text/html" title="Mutation Conservation in Mendelian Genes" /><published>2015-08-12T00:00:00+01:00</published><updated>2015-08-12T00:00:00+01:00</updated><id>http://localhost:4000/Mutation-Conversation-in-Mendelian-Genes</id><content type="html" xml:base="http://localhost:4000/Mutation-Conversation-in-Mendelian-Genes/">&lt;p&gt;This is a follow up to the mutation conservation analyses I’ve been doing (you can see the analysis for NPC1 &lt;a href=&quot;http://mtc.science/mutation-conservation-across-organisms-in-npc1&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt; and for a set of genes that were found to be replaceable &lt;a href=&quot;http://mtc.science/humanization-of-yeast-genes-part-2&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;) &lt;/p&gt;

&lt;p&gt;For this analysis I started off with a list of 260 genes associated with mendelian diseases that affect all organelles (the list came mainly from &lt;a href=&quot;http://edit.tigem.it/en/research/researchers/antonella-de-matteis/disease-genes&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;). Then, for each gene I downloaded the protein sequences for human, mouse, drosophila, zebrafish, c. elegans and yeast (as many as were available) from HomoloGene. If a sequence was missing I checked on OMA browser as well. &lt;/p&gt;

&lt;p&gt;Afterwards I created a multiple sequence alignment using CLUSTAL W2. I then used Princeton’s Protein Residue Conservation Prediction tool to calculate the Jensen Shannon Divergence, Shannon Entropy and Sum of Pairs scores throughout the protein. I proceeded to search Clinvar for mutations associated with the gene of interest and inputed this information to a &lt;a href=&quot;https://github.com/materechm/plabData/blob/master/yeast_replaceable_genes/test.py&quot; rel=&quot;nofollow&quot;&gt;program I wrote&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;results-first-130-genes_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#results-first-130-genes_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Results: first 130 genes&lt;/h2&gt;
&lt;p&gt;Throughout all methods pathogenic mutations are on average more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 3.19E0-5, Shannon Entropy p: 6.06E-09, Sum of Pairs p: 2.77E-09), and more conserved than benign mutations (Jensen Shannon Divergence p: 2.75E-10, Shannon Entropy p: 4.51E-18, Sum of Pairs p: 6.32E-18) &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/6bdzk5g6df3da.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/6bdzk5g6df3da_small.png&quot; alt=&quot;jsDivergence.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/dbjz1qacv42f5q.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/dbjz1qacv42f5q_small.png&quot; alt=&quot;sEntropy.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/y5lhkkxfx4pdrw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/y5lhkkxfx4pdrw_small.png&quot; alt=&quot;sumOfPairs.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The average number of mutations per gene is 12.10852713, and 21% are benign. On average 5.611111111 mutations are fully conserved which make up about 3% of the fully conserved amino acids on the proteins. &lt;/p&gt;

&lt;p&gt;Notably, the difference in conservation between pathogenic mutations and the average amino acid seems to be more significant when we have more mutations, and the relationship (pearson correlation: -0.397501) appears to follow a power trend, which means we get a stronger signal as mutations increase as expected, which again could be the reason why we did not reach statistical significance on our (previous mutation conservation analysis)[&lt;a href=&quot;http://mtc.science/humanization-of-yeast-genes-part-2&quot; rel=&quot;nofollow&quot;&gt;http://mtc.science/humanization-of-yeast-genes-part-2&lt;/a&gt;]&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/w7jb6lw5mzrdw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/w7jb6lw5mzrdw_small.png&quot; alt=&quot;corr_n_p.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
There does not seem to be a relationship between number of mutations and percentage fully conserved mutations. This means that even though the difference in conservation between pathogenic and the average is more significant as mutation number increases, the percentage of fully conserved mutations does not depend on how many mutations we have. &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/6zccscs5hbgfeq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/6zccscs5hbgfeq_small.png&quot; alt=&quot;corr_n_conservation.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
And there does not seem to be a correlation between the percentage fully conserved mutations or the p value with the number of species where there was a homolog, which means we aren’t getting a stronger signal just because there are less species. &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/hj7snz6fthtqea.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/hj7snz6fthtqea_small.png&quot; alt=&quot;corr_species_p.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/j1u6pscnqxyg0w.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/j1u6pscnqxyg0w_small.png&quot; alt=&quot;corr_species_conservation.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;some-visual-examples-of-mutation-conservation_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#some-visual-examples-of-mutation-conservation_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Some visual examples of mutation conservation&lt;/h2&gt;
&lt;p&gt;In the following graphs amino acids highlighted in purple indicate fully conserved pathogenic mutations, in red are mutations that are not fully conserved and all amino acids with an * below are fully conserved. &lt;/p&gt;
&lt;h3 id=&quot;1-clcn5_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#1-clcn5_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;1) CLCN5&lt;/h3&gt;
&lt;p&gt;CLCN5 has 18 pathogenic mutations, all of which are fully conserved and make up 2.80% of the fully conserved amino acids in the protein. Pathogenic mutations are more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 0.013477584, Shannon Entropy p: 3.35166E-09, Sum of Pairs p: 0.002770766)&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/186i4qbmwfc1q.jpeg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/186i4qbmwfc1q_small.jpeg&quot; alt=&quot;CLCN5.jpeg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-cln3_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#2-cln3_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;2) CLN3&lt;/h3&gt;
&lt;p&gt;CLN3 has 29 pathogenic mutations, 58.62% which are fully conserved and make up 21.79% of the fully conserved amino acids in the protein. Pathogenic mutations are more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 0.000347195, Shannon Entropy p: 0.000670302, Sum of Pairs p: 0.000207668)&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/zxm75fatgz1ga.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/zxm75fatgz1ga_small.jpg&quot; alt=&quot;CLN3.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;3-dhcr7_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#3-dhcr7_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;3) DHCR7&lt;/h3&gt;
&lt;p&gt;DHCR7 has 30 pathogenic mutations, 93.33% which are fully conserved and make up 8.16% of the fully conserved amino acids in the protein. Pathogenic mutations are more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 1.15794E-05, Shannon Entropy p: 1.36185E-05, Sum of Pairs p: 0.000107308)&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/l2o0arhwit3geg.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/l2o0arhwit3geg_small.jpg&quot; alt=&quot;DHCR7.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;4-dnm2_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#4-dnm2_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;4) DNM2&lt;/h3&gt;
&lt;p&gt;DNM2 has 17 pathogenic mutations, all of which are fully conserved and make up 2.39% of the fully conserved amino acids in the protein. Pathogenic mutations are more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 0.003927946, Shannon Entropy p: 6.44148E-08, Sum of Pairs p: 0.000504219)&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/347c8jlgeplhg.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/347c8jlgeplhg_small.jpg&quot; alt=&quot;DNM2.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;5-hexa_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#5-hexa_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;5) HEXA&lt;/h3&gt;
&lt;p&gt;HEXA has 40 pathogenic mutations, 85.00% are fully conserved and make up 12.45% of the fully conserved amino acids in the protein. Pathogenic mutations are more conserved than the average amino acid in the protein (Jensen Shannon Divergence p: 0.001007446, Shannon Entropy p: 3.23795E-06, Sum of Pairs p: 1.93499E-06)&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/qlnkdjmenxn8a.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/qlnkdjmenxn8a_small.jpg&quot; alt=&quot;HEXA.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;data_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#data_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Data&lt;/h2&gt;
&lt;p&gt;All data is here: &lt;a href=&quot;https://github.com/materechm/plabData&quot; rel=&quot;nofollow&quot;&gt;https://github.com/materechm/plabData&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;references_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#references_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://edit.tigem.it/en/research/researchers/antonella-de-matteis/disease-genes&quot; rel=&quot;nofollow&quot;&gt;http://edit.tigem.it/en/research/researchers/antonella-de-matteis/disease-genes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Landrum MJ, Lee JM, Riley GR, Jang W, Rubinstein WS, Church DM, Maglott DR. ClinVar: public archive of relationships among sequence variation and human phenotype. Nucleic Acids Res. 2014 Jan 1;42(1)&lt;/p&gt;

&lt;p&gt;Thompson, J D, D G Higgins, and T J Gibson. “CLUSTAL W: Improving the Sensitivity of Progressive Multiple Sequence Alignment through Sequence Weighting, Position-Specific Gap Penalties and Weight Matrix Choice.” Nucleic Acids Research 22.22 (1994): 4673–4680. Print.&lt;/p&gt;

&lt;p&gt;Capra JA and Singh M. Predicting functionally important residues from sequence conservation. Bioinformatics, 23(15):1875-82, 2007&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Bioinformatics" /><summary type="html">This is a follow up to the mutation conservation analyses I’ve been doing (you can see the analysis for NPC1 here and for a set of genes that were found to be replaceable here)</summary></entry><entry><title type="html">On Yeast And ALS (Part 3)</title><link href="http://localhost:4000/On-Yeast-And-ALS-3/" rel="alternate" type="text/html" title="On Yeast And ALS (Part 3)" /><published>2015-08-08T00:00:00+01:00</published><updated>2015-08-08T00:00:00+01:00</updated><id>http://localhost:4000/On-Yeast-And-ALS-3</id><content type="html" xml:base="http://localhost:4000/On-Yeast-And-ALS-3/">&lt;p&gt;This is the third post on my ALS yeast series. The &lt;a href=&quot;http://mtc.science/of-yeast-and-als&quot; rel=&quot;nofollow&quot;&gt;first post&lt;/a&gt; describes existing yeast ALS models and the &lt;a href=&quot;http://mtc.science/on-yeast-an-als-part-2&quot; rel=&quot;nofollow&quot;&gt;second post&lt;/a&gt; describes in more detail the project I am working on this summer: chemical modifier screens in yeast models of ALS. &lt;/p&gt;

&lt;h2 id=&quot;current-state-of-the-project_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#current-state-of-the-project_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Current state of the project&lt;/h2&gt;
&lt;p&gt;We got e. coli containing plasmids with WT TDP43, WT FUS and TDP43 M337V from the Gitler lab. We performed a miniprep using Zymo’s kit and then did a transformation using standard methods (&lt;a href=&quot;http://mcb.berkeley.edu/labs/koshland/Protocols/YEAST/LiAc.html&quot; rel=&quot;nofollow&quot;&gt;exact protocol here&lt;/a&gt;). Two days later we got transformants, which you can see below &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/oudodwslbfshg.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/oudodwslbfshg_small.jpg&quot; alt=&quot;FullSizeRender.jpg&quot; /&gt;&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;The next thing we did was a liquid growth assay (we decided to do liquid assay instead of a spotting assay because that is how our screens will be performed). For that we picked a colony for each plasmid and inoculated them in 3 ml of raffinose. They grew at 30C while shaking at 230 rpm. After the first day we picked a new set of colonies and inoculated them in 3 ml of glucose and they were grown overnight in the aforementioned conditions. We washed the glucose cultures with nuclease free water twice. Then we diluted the cells grown in raffinose to 1:100 for FUS and 1:10 for the two TDP43 strains and 1:500 for the cells grown in glucose, into either glucose or galactose. A picture of the assay is below. The cloudy wells are wells that contain glucose (and are cloudy because of the growth) and the transparent wells contain gal&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/sinfnuwn0nblpw.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/sinfnuwn0nblpw_small.jpg&quot; alt=&quot;FullSizeRender 2.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were able to replicate the results, which you can see below (note: the order of the wells was slightly different as I accidentally switched some wells around the first time) &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/gg9o3yudabg.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/gg9o3yudabg_small.jpg&quot; alt=&quot;FullSizeRender 3.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The next thing we did was to grow cultures in glucose, wash them and then re suspend them in galactose to make sure that the gene was being expressed. Since the protein is tagged to YFP we were able to see it under the microscope. Below is an image after the cells were in glucose for 2.5h. It is still a really early time point (as aggregation is usually quantified after 6h) &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/fkjnowvpkgmkwa.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/fkjnowvpkgmkwa_small.png&quot; alt=&quot;Screen Shot 2015-07-28 at 4.11.13 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And we took images again after 23h (unfortunately not at timepoints in between). Here you can see that the expression is starting to diffuse again, though more cells are expressing the gene &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/secc1nbe4mavq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/secc1nbe4mavq_small.png&quot; alt=&quot;Screen Shot 2015-08-07 at 11.09.34 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, given the data above, we felt confident enough in our model to start a screen. We set it up to be able to test different compounds (roughly 3,000) in the 3 different models using two independent transformants to make sure the screen results are reproducible. We dispensed compounds using the Echo (thanks to Alec Ludin for doing it!), then prepared the following dilutions (both in galactose and glucose) TDP43 transformants 1 and 2, TDP43 M337V transformants 1 and 2 -&amp;gt; 1:500, FUS transformant 1 -&amp;gt; 1: 250, FUS transformant 2 -&amp;gt; 3:500 and dispensed 50 microliters into each well. The first 2 rows of every 384 well plate are negative controls (galactose with DMSO) and the last 2 rows are positive controls (glucose with DMSO). We’re still waiting on the results - stay tuned! &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/e3ua66tbzl9nhg.jpg&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/e3ua66tbzl9nhg_small.jpg&quot; alt=&quot;FullSizeRender 4.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Yeast" /><category term="Biology" /><category term="ALS" /><summary type="html">This is the third post on my ALS yeast series. The first post describes existing yeast ALS models and the second post describes in more detail the project I am working on this summer: chemical modifier screens in yeast models of ALS.</summary></entry><entry><title type="html">On Yeast And ALS (Part 2)</title><link href="http://localhost:4000/On-Yeast-And-ALS-2/" rel="alternate" type="text/html" title="On Yeast And ALS (Part 2)" /><published>2015-07-13T00:00:00+01:00</published><updated>2015-07-13T00:00:00+01:00</updated><id>http://localhost:4000/On-Yeast-And-ALS-2</id><content type="html" xml:base="http://localhost:4000/On-Yeast-And-ALS-2/">&lt;p&gt;Back in April I wrote a &lt;a href=&quot;http://mtc.science/of-yeast-and-als&quot; rel=&quot;nofollow&quot;&gt;post&lt;/a&gt; describing the currently available yeast models for ALS and mentioned I would be doing yeast work in the summer. &lt;/p&gt;

&lt;p&gt;My goal for the summer is to do drug screens in yeast models of ALS. Initially the idea was to use the TDP43 and FUS models from Aaron Gitler’s lab at Stanford and generate a SOD1 model with the G93A mutation, which is found in patients and is also the mutation the mouse model contains. We decided to not generate the SOD1 G93A model after reading a 20-year-old &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/pmc/articles/PMC42351/pdf/pnas01485-0616.pdf&quot; rel=&quot;nofollow&quot;&gt;paper&lt;/a&gt; (older than I am!) in which they transformed yeast lacking their own SOD1 gene with WT human SOD1 and human SOD1 containing one of three mutations (including G93A). They saw there wasn’t a growth defect in the yeast SOD1 knockout mutant strains compared to the strain containing WT human SOD1 and the strain containing WT yeast SOD1.&lt;/p&gt;
&lt;h2 id=&quot;current-state-of-the-project_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#current-state-of-the-project_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Current state of the project&lt;/h2&gt;
&lt;p&gt;We got e. coli containing plasmids with WT TDP43, WT FUS and TDP43 M337V from the Gitler lab. We plated the e. coli, picked 3 colonies per plasmid and grew them overnight at 37 degrees celsius. We then used Zymo’s miniprep kit to extract the DNA. We got a final concentration of 47.3 ng/ul for the TPD43 WT, 69.1 ng/ul for the TDP43 M337V and 199.5 ng/ul for the FUS WT. &lt;/p&gt;

&lt;p&gt;We plated both BY4741 and BY4742 yeast in YEPD agar plates and left them in a 30 degrees celsius incubator for 48h. We then picked a colony of each and grew them for 14h (again at 30 degrees). &lt;/p&gt;
&lt;h2 id=&quot;next-steps_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#next-steps_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Next steps&lt;/h2&gt;
&lt;p&gt;We’ll transform the yeast with the plasmid DNA using lithium acetate. &lt;/p&gt;

&lt;p&gt;For spotting assays the yeast will be grown overnight at 30 degrees celsius in synthetic media lacking uracil and containing 2% raffinose until they reach log or mid-long phase. Cultures will then be normalized for A600 nm serially diluted and spotted onto synthetic solid media containing glucose (SD/-Ura) or galactose (SGal/-Ura) lacking uracil and grown at 30 °C for 2–3 days. &lt;/p&gt;

&lt;p&gt;For the survivorship assays briefly after the induction of empty vector, TDP43 WT, TDP43 M337V or FUS WT  in 2% galactose, survivorship is determined at certain time points by harvesting cells at an A600 nm of 1, diluting them 1:1000, and plating 300 μl of these cells on synthetic media containing 2% glucose. Plates are incubated at 30 °C for 2 days. Colony forming units are then determined. We would expect that with the TDP43 models fewer than 10% of cells will be able to form colonies following 12h of expression, and by 24h fewer than 2% will still alive. &lt;/p&gt;

&lt;p&gt;To assess aggregation the yeast is grown as described above, then normalized to A600 nm = 0.2 prior to galactose induction, After 6h of induction cells with &amp;gt;3 foci under the YFP channel are considered as cells with aggregation. &lt;/p&gt;
&lt;h2 id=&quot;references_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#references_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;Rabizadeh, S et al. Mutations associated with amyotrophic lateral sclerosis convert superoxide dismutase from an antiapoptotic gene to a proapoptotic gene: Studies in yeast and neural cells. Proc. Natl. Acad. Sci. &lt;strong&gt;92&lt;/strong&gt;, 3024-3028 (1995) &lt;/p&gt;

&lt;p&gt;Cooper, AA et al. α-Synuclein Blocks ER-Golgi Traffic and Rab1&lt;br /&gt;
Rescues Neuron Loss in Parkinson’s Models Science. &lt;strong&gt;313&lt;/strong&gt;(5785) 324-328 (2006)&lt;/p&gt;

&lt;p&gt;Johnson, BS et al. A yeast TDP-43 proteinopathy model: Exploring the molecular determinants of TDP-43 aggregation and cellular toxicity. PNAS, &lt;strong&gt;105&lt;/strong&gt;(17) 6439–6444 (2008)&lt;/p&gt;

&lt;p&gt;Sun, Z et al. Molecular Determinants and Genetic Modifiers of Aggregation and Toxicity for the ALS Disease Protein FUS/TLS. PLoS Biology, E1000614-E1000614 (2010)&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Yeast" /><category term="Biology" /><category term="ALS" /><summary type="html">Back in April I wrote a post describing the currently available yeast models for ALS and mentioned I would be doing yeast work in the summer.</summary></entry><entry><title type="html">Humanization of Yeast Genes (Part 2)</title><link href="http://localhost:4000/Humanization-Of-Yeast-Genes-2/" rel="alternate" type="text/html" title="Humanization of Yeast Genes (Part 2)" /><published>2015-06-30T00:00:00+01:00</published><updated>2015-06-30T00:00:00+01:00</updated><id>http://localhost:4000/Humanization-Of-Yeast-Genes-2</id><content type="html" xml:base="http://localhost:4000/Humanization-Of-Yeast-Genes-2/">&lt;p&gt;About a month ago I wrote a &lt;a href=&quot;http://mtc.science/humanization-of-yeast-genes&quot; rel=&quot;nofollow&quot;&gt;post&lt;/a&gt; in which I mentioned I would be working on a project to try to determine if pathogenic mutations in genes shown on a paper by the Marcotte lab to be replaceable by the human version of the gene, which means that the yeast is able to survive, are in amino acids that are more conserved than the average amino acid in the protein. &lt;/p&gt;

&lt;p&gt;I was initially interested in monogenic diseases, so I parsed through the GWAS catalog and the OMIM genemap to try to find monogenic diseases. The OMIM genemap contained 1332 conditions/symptoms that are associated with a single gene. The GWAS catalog contained 83. I compared these lists against the lists of replaceable and non replaceable genes and got no matches. &lt;/p&gt;

&lt;p&gt;I then looked at a list containing 260 genes associated with mendelian diseases that affect all organelles. I got 8 matches for replaceable genes (ALG1, DDOST, DHDDS, DOLK, DPAGT1, DPM1, PIGA, SPTLC1) and 6 matches for non replaceable genes (ALG2, COG4, INPP5E, MPI, PIGM, RFT1)&lt;/p&gt;

&lt;p&gt;I then proceeded to analyze amino acid conservation across organisms (human, mice, zebrafish, drosophila, c. elegans and yeast) as described in &lt;a href=&quot;http://mtc.science/mutation-conservation-across-organisms-in-npc1&quot; rel=&quot;nofollow&quot;&gt;my previous post&lt;/a&gt; (where I analyzed mutation conservation across organisms for the NPC1 gene) &lt;/p&gt;
&lt;h2 id=&quot;conservation-in-replaceable-genes_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#conservation-in-replaceable-genes_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Conservation in replaceable genes&lt;/h2&gt;
&lt;p&gt;In both Shannon Entropy and Sum of Pairs pathogenic mutations are (on average) in amino acids that are more conserved than the average amino acids in the protein. The difference between pathogenic and average amino acid conservation isn’t statistically significant when looking at all the genes (Jensen Shannon Divergence p: 0.2763591, Shannon Entropy p: 0.1860548, Sum of Pairs p: 0.1375894), though it is in DPAGT1 throughout all 3 methods (Jensen Shannon Divergence p: 0.009011903, Shannon Entropy p: 0.02030809, Sum of Pairs p: 0.04017908), in PIGA using Jensen Shannon Divergence (p: 0.01821001) and on SPTLC1 using Shannon entropy (p: 0.02929091; in all of these pathogenic mutations are more conserved) . The average number of mutations per gene is 5.25, there was only one benign mutation analyzed (so we can’t really make any conclusions about benign mutations). On average 1.625 mutations are fully conserved (23%) and the fully conserved mutations make up on average 2% of the fully conserved amino acids. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/xhzicbyr9lc2hq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/xhzicbyr9lc2hq_small.png&quot; alt=&quot;Screen Shot 2015-06-29 at 3.27.01 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;conservation-in-nonreplaceable-genes_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#conservation-in-nonreplaceable-genes_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Conservation in non-replaceable genes&lt;/h2&gt;
&lt;p&gt;Throughout all 3 methods pathogenic mutations are on average more conserved than the average amino acid in the protein, though the difference is not statistically significant (Jensen Shannon Divergence p: 0.113819, Shannon Entropy p: 0.145702, Sum of Pairs p: 0.3490833) when looking at all the genes. Pathogenic mutations are also in amino acids that are on average more conserved than amino acids containing benign mutations, though the difference is again not statistically significant (Jensen Shannon Divergence p: 0.1159944, Shannon Entropy p: 0.05275803, Sum of Pairs p: 0.1341106) In MPI the difference between the average amino acid and the amino acids containing pathogenic mutations is statistically significant across all methods (Jensen Shannon Divergence p: 0.006847529, Shannon Entropy p: 0.01122596, Sum of Pairs p: 0.03383133), and the difference between pathogenic and benign mutations is statistically significant using Jensen Shannon Divergence  and Shannon Entropy (p: 0.04661734 and  0.04399531 respectively) but not Sum of pairs (p: 0.09531598). The average number of mutations per gene is 4, with on average 24% being benign. On average 0.4 mutations are fully conserved (7%) and the fully conserved mutations make up on average 1% of the fully conserved amino acids. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/qnexemlqlteq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/qnexemlqlteq_small.png&quot; alt=&quot;Screen Shot 2015-06-29 at 3.27.13 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;relationship-between-replaceable-and-non-repl_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#relationship-between-replaceable-and-non-repl_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Relationship between replaceable and non replaceable genes&lt;/h2&gt;
&lt;p&gt;As expected, on average amino acids in replaceable genes are more conserved than amino acids in non replaceable genes. The difference is statistically significant across all methods (Jensen Shannon Divergence p: 0.0289762, Shannon Entropy p: 0.03484218, and Sum of Pairs p: 0.04859736). On average pathogenic mutations are more conserved in replaceable genes than non replaceable genes throughout 2 out of 3 methods (Shannon Entropy and Sum of Pairs) though the difference is not statistically significant (p: 0.3611836 and 0.1574445 respectively). Benign mutations are also more conserved in replaceable genes than in non replaceable genes but I did not have a large enough sample size (n = 1) on replaceable genes to determine statistical significance. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/oqn8trezlcwuqg.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/oqn8trezlcwuqg_small.png&quot; alt=&quot;Screen Shot 2015-06-29 at 12.55.18 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;conclusion-and-next-steps_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#conclusion-and-next-steps_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Conclusion and next steps&lt;/h2&gt;
&lt;p&gt;It is quite possible that statistical significance was not reached because of the small amount of mutations these genes contained, in addition to the small amount of genes that I looked at. The next step will be to look at all the genes in the list of 260 genes associated with mendelian diseases that affect all organelles. Maybe something else that would be interesting to do is to look at all the genes in the list of replaceable and non replaceable genes in the paper and that might give statistically significant results. &lt;/p&gt;
&lt;h2 id=&quot;references_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#references_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;Kachroo, AH et al. Systematic humanization of yeast genes reveals conserved functions and genetic modularity. Science 348(6237) 921-925 (2015)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://edit.tigem.it/en/research/researchers/antonella-de-matteis/disease-genes&quot; rel=&quot;nofollow&quot;&gt;http://edit.tigem.it/en/research/researchers/antonella-de-matteis/disease-genes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Landrum MJ, Lee JM, Riley GR, Jang W, Rubinstein WS, Church DM, Maglott DR. ClinVar: public archive of relationships among sequence variation and human phenotype. Nucleic Acids Res. 2014 Jan 1;42(1)&lt;/p&gt;

&lt;p&gt;Thompson, J D, D G Higgins, and T J Gibson. “CLUSTAL W: Improving the Sensitivity of Progressive Multiple Sequence Alignment through Sequence Weighting, Position-Specific Gap Penalties and Weight Matrix Choice.” Nucleic Acids Research 22.22 (1994): 4673–4680. Print.&lt;/p&gt;

&lt;p&gt;Capra JA and Singh M. Predicting functionally important residues from sequence conservation. Bioinformatics, 23(15):1875-82, 2007&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Yeast" /><category term="Biology" /><summary type="html">About a month ago I wrote a post in which I mentioned I would be working on a project to try to determine if pathogenic mutations in genes shown on a paper by the Marcotte lab to be replaceable by the human version of the gene, which means that the yeast is able to survive, are in amino acids that are more conserved than the average amino acid in the protein.</summary></entry><entry><title type="html">Mutation Conservation Across Organisms in NPC1</title><link href="http://localhost:4000/Mutation-Consvervation-Across-Oganisms-in-NPC1/" rel="alternate" type="text/html" title="Mutation Conservation Across Organisms in NPC1" /><published>2015-06-13T00:00:00+01:00</published><updated>2015-06-13T00:00:00+01:00</updated><id>http://localhost:4000/Mutation-Consvervation-Across-Oganisms-in-NPC1</id><content type="html" xml:base="http://localhost:4000/Mutation-Consvervation-Across-Oganisms-in-NPC1/">&lt;p&gt;As I mentioned in my previous post, something really important while using model organisms (I used yeast as an example but this is true for every model organism, like mice, flies, fish, worms) is figuring out whether the results are translatable. Given that I am interning at Perlstein Lab and they are interested in Niemann-Pick Disease, I decided to see if mutations in NPC1 are in conserved amino acids. &lt;/p&gt;

&lt;p&gt;I got the protein sequences for NPC1 in humans, mice, drosophila, c. elegans, zebrafish, and yeast from Entrez Protein. I then performed a multiple sequence alignment (MSA) using CLUSTALW2. The way MSA typically works is that you have a set S of k sequences&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/3ru8auikt72p5q.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/3ru8auikt72p5q_small.png&quot; alt=&quot;eqn1.png&quot; /&gt;&lt;/a&gt; &lt;br /&gt;
Let M be an MSA for the set S of k sequences. The alignment of s_i with s_j induced by M is generated as follows: &lt;br /&gt;
Remove from M all rows except i and j, then remove all columns that contain only blanks&lt;br /&gt;
The sum of pairs score of M is the sum of all pairwise induced alignment scores. The optimal MSA for S with respect to sum of pairs is the MSA with the highest sum of pairs score out of all possible MSA for S. Then to compute the best possible alignment d(i,j) for every pair of prefixes (lengths i, j) we use the following formula&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/dkckona2av9baw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/dkckona2av9baw_small.png&quot; alt=&quot;eqn3.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The problem with this method is that it quickly gets complex; to compute the best possible alignment d(i,j,k) for every triple of prefixes (lengths i,j,k) we would have to use the following formula&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/eq6xjhgbhzbtq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/eq6xjhgbhzbtq_small.png&quot; alt=&quot;eqn4.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/srpf20w1et3wyw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/srpf20w1et3wyw_small.png&quot; alt=&quot;eqn5.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For k sequences of length n we have to perform the following number of computations&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/hdmcunkpetyqzg.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/hdmcunkpetyqzg_small.png&quot; alt=&quot;eqn6.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;CLUSTALW2 uses a two step method that is faster. The main idea is to find strong signals (highly conserved blocks) first, outliers are added last and it increases the chances that conserved blocks survive. &lt;/p&gt;

&lt;p&gt;The first step is to compute a guide phylogenic tree. To do this it computes all pairwise alignments and stores them in a similarity matrix M&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/us4wptlomabzcw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/us4wptlomabzcw_small.png&quot; alt=&quot;eqn7.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
It then computes the guide tree using hierarchical clustering. It chooses the smallest M[i,j] then forms a new branch of the tree with s_i and s_j. It then computes the distance from the ancestor of s_i and s_j to all other sequences as the average of the distances to s_i and s_j; to do this it sets M’ = M, deletes rows and columns i and j, adds a new column and row (ij) and then &lt;a href=&quot;https://svbtleusercontent.com/c2wptmuofrolg.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/c2wptmuofrolg_small.png&quot; alt=&quot;eqn8.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
It finally iterates until M’ has only one column/row&lt;/p&gt;

&lt;p&gt;The second step is progressive MSA. It computes pairwise alignment in the order given by the guide tree. To align a MSA M_1 with a MSA M_2 it uses the usual global alignment algorithm and to score a column it computes the average score over all pairs of symbols in the column.&lt;/p&gt;

&lt;p&gt;After all this we end up having to perform less computations &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/thozd5nodyca.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/thozd5nodyca_small.png&quot; alt=&quot;eqn9.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see a part of the alignment file below. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/phoyspa1q6fxg.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/phoyspa1q6fxg_small.png&quot; alt=&quot;Screen Shot 2015-06-15 at 8.59.43 AM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I got a list of mutations in the NPC1 gene from ClinVar. I got a total of 51 amino acid changes, 6 of which were benign/likely benign. I then searched for the amino acid in which the mutations occur in the sequence alignment and saw whether the amino acid was conserved or not. &lt;/p&gt;

&lt;p&gt;To see if the amino acids were conserved I used 3 different methods: Jensen Shannon Distribution, Shannon Entropy and Sum of Pairs. For consistency Shannon entropy scores were scaled to the range [0,1] and then subtracted from 1, so that higher scores indicate greater conservation. &lt;/p&gt;

&lt;p&gt;To see if pathogenic mutations are in amino acids that are more conserved than average and more conserved than benign mutations, I calculated the average scores across the entire protein (1278 amino acids for the human protein), the amino acids implicated in pathogenic mutations, and the amino acids implicated in benign mutations. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/9xjn6o5qjzxomq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/9xjn6o5qjzxomq_small.png&quot; alt=&quot;Screen Shot 2015-06-14 at 11.07.05 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As expected the average score for pathogenic mutations was higher than the average for the entire protein and the benign mutations. To figure out if the difference was statistically significant I then calculated the standard deviation for these values and the p values for the relationships whole protein - pathogenic and pathogenic - benign and found that the difference between all of these relationships throughout the 3 methods for pathogenic - benign and 2 methods (Jensen-Shannon Divergence, Shannon Entropy) for whole protein - pathogenic were statistically significant (p &amp;lt; 0.05) &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/qgz1izk56y2wna.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/qgz1izk56y2wna_small.png&quot; alt=&quot;Screen Shot 2015-06-27 at 3.06.12 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can see the full mutation data here: &lt;a href=&quot;https://github.com/materechm/Bioinformatics/blob/gh-pages/NPC1MutationConservationData.xlsx&quot; rel=&quot;nofollow&quot;&gt;https://github.com/materechm/Bioinformatics/blob/gh-pages/NPC1MutationConservationData.xlsx&lt;/a&gt;&lt;br /&gt;
The commands I used to generate the p values on R here: &lt;a href=&quot;https://gist.github.com/materechm/a673f4034f7a087ae04a&quot; rel=&quot;nofollow&quot;&gt;https://gist.github.com/materechm/a673f4034f7a087ae04a&lt;/a&gt;&lt;br /&gt;
And the alignment file here: &lt;a href=&quot;https://github.com/materechm/Bioinformatics/blob/gh-pages/proteinAligmentNPC1.pdf&quot; rel=&quot;nofollow&quot;&gt;https://github.com/materechm/Bioinformatics/blob/gh-pages/proteinAligmentNPC1.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any comments or suggestions on interesting things that can be done with this data shoot me an email at &lt;a href=&quot;mailto:maria@perlsteinlab.com&quot; rel=&quot;nofollow&quot;&gt;maria@perlsteinlab.com&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Landrum MJ, Lee JM, Riley GR, Jang W, Rubinstein WS, Church DM, Maglott DR. ClinVar: public archive of relationships among sequence variation and human phenotype. Nucleic Acids Res. 2014 Jan 1;42(1)&lt;/p&gt;

&lt;p&gt;Thompson, J D, D G Higgins, and T J Gibson. “CLUSTAL W: Improving the Sensitivity of Progressive Multiple Sequence Alignment through Sequence Weighting, Position-Specific Gap Penalties and Weight Matrix Choice.” Nucleic Acids Research 22.22 (1994): 4673–4680. Print.&lt;/p&gt;

&lt;p&gt;Capra JA and Singh M. Predicting functionally important residues from sequence conservation. Bioinformatics, 23(15):1875-82, 2007&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Bioinformatics" /><summary type="html">As I mentioned in my previous post, something really important while using model organisms (I used yeast as an example but this is true for every model organism, like mice, flies, fish, worms) is figuring out whether the results are translatable. Given that I am interning at Perlstein Lab and they are interested in Niemann-Pick Disease, I decided to see if mutations in NPC1 are in conserved amino acids.</summary></entry><entry><title type="html">Humanization of Yeast Genes (Part 1)</title><link href="http://localhost:4000/Humanization-Of-Yeast-Genes-1/" rel="alternate" type="text/html" title="Humanization of Yeast Genes (Part 1)" /><published>2015-05-27T00:00:00+01:00</published><updated>2015-05-27T00:00:00+01:00</updated><id>http://localhost:4000/Humanization-Of-Yeast-Genes-1</id><content type="html" xml:base="http://localhost:4000/Humanization-Of-Yeast-Genes-1/">&lt;p&gt;As I mentioned in my post before, yeast can be a really useful disease model for drug screens. Yeast screens are cheaper than screens using other organisms and you can go through a lot of compounds in very little time. Given that yeast and humans are separated by billions of years of evolution, a relevant question when considering yeast as a disease model is whether the results are translatable, and whether genes retain function after so many years of evolution. &lt;/p&gt;

&lt;p&gt;A paper published on the May 22 issue of Science showed that yes, many genes do retain function. &lt;/p&gt;

&lt;p&gt;The paper describes how a team of researchers from the Marcotte lab replaced 414 essential yeast genes with their human counterparts. To do this they cloned the human orthologs into a yeast plasmid and the genes were placed under control  of an inducible (Gal) or constitutive (GPD) promoter. Additionally, the yeast strains were engineered so that the expression of the yeast genes could be downregulated (with a tetracycline repressive promoter) or inactivated (via a temperature sensitive allele). They confirmed that the loss of the relevant gene caused a growth defect, and they found that replacing the yeast gene with the human version of the gene rescued growth in almost half of the genes (47%). &lt;/p&gt;

&lt;p&gt;After seeing that only a fraction of the genes could be replaced it was relevant to see what characteristics of the genes determine their ability to be replaced by the homologs. &lt;/p&gt;

&lt;p&gt;An interesting result was that sequence similarity doesn’t fully predict replaceability. They found sequence similarity was relevant with genes that had &amp;gt; 50% sequence similarity or &amp;lt; 20% (sequence similarity ranges from 9 to 92%, with an average of 32%) but in most pairs that fell into the 20-50% range the replaceability was poorly predicted. Instead replaceability seemed to be best predicted in terms of gene modules: genes in the same pathway or complex seemed to have a similar replaceability. Replaceable genes also had a tendency to be shorter and more highly expressed. Below you can see a figure showing what percentage of genes was replaceable based on gene function.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/jpxfiockhrc8a.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/jpxfiockhrc8a_small.png&quot; alt=&quot;Screen Shot 2015-05-27 at 3.59.39 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;a-follow-up-project_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#a-follow-up-project_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;A follow up project&lt;/h2&gt;
&lt;p&gt;As part of my internship at Perlstein Lab (which started yesterday!) I’ll try to determine which of the essential yeast genes that the paper found can be replaced by their human counterpart are associated with a monogenic disease. Then I’ll identify the mutations in these genes that are known to cause disease. Then based on sequence alignments between yeast, worm, fly, zebrafish, mouse and human, I’ll figure out if disease-causing mutations affect conserved or variable amino acid positions. &lt;/p&gt;

&lt;p&gt;Subscribe to my blog for updates on this project and other projects I’ll be working on throughout my internship! &lt;/p&gt;
&lt;h2 id=&quot;references_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#references_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;Kachroo, AH et al. Systematic humanization of yeast genes reveals conserved functions and genetic modularity. Science &lt;strong&gt;348&lt;/strong&gt;(6237) 921-925 (2015) &lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Yeast" /><category term="Biology" /><summary type="html">As I mentioned in my post before, yeast can be a really useful disease model for drug screens. Yeast screens are cheaper than screens using other organisms and you can go through a lot of compounds in very little time. Given that yeast and humans are separated by billions of years of evolution, a relevant question when considering yeast as a disease model is whether the results are translatable, and whether genes retain function after so many years of evolution.</summary></entry><entry><title type="html">On Yeast And ALS (Part 1)</title><link href="http://localhost:4000/On-Yeast-And-ALS-1/" rel="alternate" type="text/html" title="On Yeast And ALS (Part 1)" /><published>2015-04-15T00:00:00+01:00</published><updated>2015-04-15T00:00:00+01:00</updated><id>http://localhost:4000/On-Yeast-And-ALS-1</id><content type="html" xml:base="http://localhost:4000/On-Yeast-And-ALS-1/">&lt;p&gt;Although yeast and humans are separated by billions of years of evolution, yeast makes a really good disease model and can be really helpful to screen compounds and see which of them can rescue the phenotype acquired by inducing a mutation associated with our disease of interest. Below I expand on the 3 yeast models of ALS (actual yeast work to come during the summer!) &lt;/p&gt;

&lt;h2 id=&quot;sod1_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#sod1_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;SOD1&lt;/h2&gt;
&lt;p&gt;SOD1 is a gene responsible for about 20% of fALS cases. Over 150 mutations passed through mendelian inheritance have been found in ALS (most autosomal dominant). Aggregates containing SOD1 are found in patients with familial ALS, but not in patients with sporadic ALS &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/yyta1icbcpqyaw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/yyta1icbcpqyaw_small.png&quot; alt=&quot;rsz_1screen_shot_2015-04-15_at_14120_pm.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A model of SOD1 pathology in yeast was  published by Sturtz, LA et al (2001)&lt;sup&gt;1.&lt;/sup&gt; They found that knocking out SOD1 caused metabolic defects and rapid death.  &lt;/p&gt;
&lt;h2 id=&quot;tdp43_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#tdp43_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;TDP43&lt;/h2&gt;
&lt;p&gt;TDP43 is responsible for about 5% of fALS cases. Unlike SOD1, aggregates containing TDP43 are also found in sporadic ALS. &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/wv6kkip9iw6a.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/wv6kkip9iw6a_small.png&quot; alt=&quot;Screen Shot 2015-04-15 at 1.16.51 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In a paper by Johnson, BS et al (2008) a TDP43 yeast model is described. TDP43 fused with GFP put under the control of a galactose promoter was induced in the yeast cells. Expression of TDP43 caused intranuclear aggregates, consistent with the TDP43 ALS phenotype. Increasing TDP43 expression caused the aggregates to move to the cytoplasm, Expressing TDP43 using galactose caused growth inhibition. &lt;/p&gt;
&lt;h2 id=&quot;fus_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#fus_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;FUS&lt;/h2&gt;
&lt;p&gt;FUS like TDP43 is responsible for about 5% of fALS cases and it is found in both sporadic and familial ALS. FUS mutations in fALS are usually clustered around the extreme C terminus. Papers by Sun, Z et al (2010) and Ju, S et al (2011) describe yeast models of FUS toxicity.  &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://svbtleusercontent.com/gpz4dy5ppjscw.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/gpz4dy5ppjscw_small.png&quot; alt=&quot;fusyeast.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In the Ju paper they generated 3 strands of yeast: one with wild type FUS and the other two with mutant FUS (R521G and H517Q) fused to GFP and with the GAL1 promoter. FUS was found to be toxic to yeast (caused growth inhibition) in a dose-dependent manner. When either mutant or WT FUS is over expressed (with 2% galactose) aggregates in the cytoplasm are formed, consistent with the ALS phenotype. &lt;/p&gt;
&lt;h2 id=&quot;footnotes_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#footnotes_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Footnotes&lt;/h2&gt;
&lt;p&gt;1) I am not completely satisfied with this model, as it is thought ALS-linked mutations in SOD1 are likely to cause a toxic gain of function, not a loss of function. Given that, it would probably be better to make a yeast model containing one of the associated mutations rather than knocking out SOD1. I do not know if this has been done in the past, but if it has I was unable to find it. &lt;/p&gt;
&lt;h2 id=&quot;references_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#references_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;References&lt;/h2&gt;
&lt;p&gt;Sturtz, LA et al. A Fraction of Yeast Cu,Zn-Superoxide Dismutase and Its Metallochaperone, CCS, Localize to the Intermembrane Space of Mitochondria: A PHYSIOLOGICAL ROLE FOR SOD1 IN GUARDING AGAINST MITOCHONDRIAL OXIDATIVE DAMAGE. J. Biol. Chem. &lt;strong&gt;276&lt;/strong&gt;, 38084-38089 (2001)&lt;/p&gt;

&lt;p&gt;Bastow, EL et al. Using yeast models to probe the molecular basis of amyotrophic lateral sclerosis. Biochem Soc Trans. &lt;strong&gt;39&lt;/strong&gt;(5) 1482-1487 (2011) &lt;/p&gt;

&lt;p&gt;Johnson, BS et al. A yeast TDP-43 proteinopathy model: Exploring&lt;br /&gt;
the molecular determinants of TDP-43 aggregation and cellular toxicity. PNAS, &lt;strong&gt;105&lt;/strong&gt;(17) 6439–6444 (2008)&lt;/p&gt;

&lt;p&gt;Sun, Z et al. Molecular Determinants and Genetic Modifiers of Aggregation and Toxicity for the ALS Disease Protein FUS/TLS. PLoS Biology, E1000614-E1000614 (2010) &lt;/p&gt;

&lt;p&gt;Ju, S et al. A Yeast Model of FUS/TLS-Dependent Cytotoxicity. PLoS Biology, E1001052-E1001052 (2011)  &lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="ALS" /><category term="Yeast" /><category term="Biology" /><summary type="html">Although yeast and humans are separated by billions of years of evolution, yeast makes a really good disease model and can be really helpful to screen compounds and see which of them can rescue the phenotype acquired by inducing a mutation associated with our disease of interest. Below I expand on the 3 yeast models of ALS (actual yeast work to come during the summer!)</summary></entry><entry><title type="html">Playing Around With NGS</title><link href="http://localhost:4000/Playing-Around-With-NGS/" rel="alternate" type="text/html" title="Playing Around With NGS" /><published>2015-03-12T00:00:00+00:00</published><updated>2015-03-12T00:00:00+00:00</updated><id>http://localhost:4000/Playing-Around-With-NGS</id><content type="html" xml:base="http://localhost:4000/Playing-Around-With-NGS/">&lt;p&gt;Here I will walk you through how to take reads from a sequencer and assemble/map a genome and generate a VCF file + do some functional predictions. &lt;/p&gt;

&lt;h2 id=&quot;setup_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#setup_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Set-up&lt;/h2&gt;
&lt;p&gt;Install/download samtools (1.2), bwa, picard (sourceforge version), GATK + Java 7 (won’t work with other versions of Java) and SnpEFF You’ll need a computer that can run UNIX and about 50 GB of hard disk space (+ a fast internet connection makes things way better) &lt;/p&gt;
&lt;h2 id=&quot;getting-test-data_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#getting-test-data_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Getting test data&lt;/h2&gt;
&lt;p&gt;In terminal type &lt;code class=&quot;prettyprint&quot;&gt;&quot;ftp ftp.broadinstitute.org&quot;&lt;/code&gt; (username:  gsapubftp-anonymous, password: your email); change directory (cd) to  &lt;code class=&quot;prettyprint&quot;&gt;/bundle/2.8/hg19&lt;/code&gt; and download &lt;code class=&quot;prettyprint&quot;&gt;ucsc.hg19.fasta.gz&lt;/code&gt; with the get command and uncompress the reference with the gunzip command. Then download &lt;code class=&quot;prettyprint&quot;&gt;dbsnp_138.hg19.vcf.gz&lt;/code&gt; and it’s idx from the same location. &lt;/p&gt;

&lt;p&gt;Repeat the above steps with &lt;code class=&quot;prettyprint&quot;&gt;ftp-trace.ncbi.nih.gov&lt;/code&gt; (username: anonymous, password: your email); navigate to &lt;code class=&quot;prettyprint&quot;&gt;/giab/ftp/technical/garvan_data&lt;/code&gt; and download all the .fastq files that don’t say “trimmed” e.g. &lt;code class=&quot;prettyprint&quot;&gt;&quot;NIST7035_TAAGGCGA_L001_R1_001.fastq.gz&quot;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;pair-end-sequence-assembly_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#pair-end-sequence-assembly_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Pair end Sequence Assembly&lt;/h2&gt;
&lt;p&gt;[Note - for running bwa and samtools  commands it might be necessary to be on the directory where bwa or samtools is located and use ./bwa or ./samtools] &lt;/p&gt;

&lt;p&gt;The first thing we need to do in order to use bwa is construct an index for our reference genome. We do this by running the following command: &lt;br /&gt;
&lt;code class=&quot;prettyprint&quot;&gt;bwa index -a bwtsw [reference.fasta]&lt;/code&gt;. Once the reference index is built, sequence alignment indices of our fastq files need to be built, we do that with the following commands: &lt;code class=&quot;prettyprint&quot;&gt;bwa aln [reference.fasta] [short_pair_1.fastq] &amp;gt; [short_pair_1.sai]&lt;/code&gt; &lt;code class=&quot;prettyprint&quot;&gt;bwa aln [reference.fasta] [short_pair_2.fastq] &amp;gt; [short_pair_2.sai]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can now combine our reference index, the two alignment indices, and our two fastq files to create a single sequence alignment map&lt;br /&gt;
&lt;code class=&quot;prettyprint&quot;&gt;bwa sampe [reference.fasta] [short_pair_1.sai] [short_pair_2.sai] [short_pair_1.fastq] [short_pair_2.fastq] &amp;gt; [short_pair.sam]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we need to change “&lt;em&gt;” to “o” as a flag for unaligned reads, ajust mate pair info and add read headers, which can all be done with Picard using the following commands &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar ValidateSamFile.jar I=[.bam or .sam]&lt;/code&gt; This command should display MAPQ flag error, mate-pair error, and header error &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar FixMateInformation.jar I=[.bam] O=[.bam] VALIDATION_STRINGENCY=LENIENT&lt;/code&gt; &lt;br /&gt;
&lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar ValidateSamFile.jar I=[fixed.bam] IGNORE=INVALID_MAPPING_QUALITY&lt;/code&gt; Next we need to validate file accepting MAPQ flag “&lt;/em&gt;” &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar AddOrReplaceReadGroups.jar I=[.bam] O=[.bam] LB=anything PL=illumina PU=anything SM=anything&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;Next we need to re-sort the picard output and we’ll get as an output an unsorted bam file which has to be converted to binary and sorted using samtools.  To sort it we use the following commands: &lt;code class=&quot;prettyprint&quot;&gt;samtools view -bS -o [output.bam] [input.bam or .sam]&lt;/code&gt; &lt;code class=&quot;prettyprint&quot;&gt;samtools sort [input.bam] [output.sorted.bam]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To view the bam file we use the command &lt;code class=&quot;prettyprint&quot;&gt;samtools tview file.bam&lt;/code&gt; (if the file appears all white you can press n to see colors. You should see something like this: &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/z9jx6bvmh1ejbg.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/z9jx6bvmh1ejbg_small.png&quot; alt=&quot;Screen Shot 2015-02-11 at 4.08.05 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;the-vcf-file_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#the-vcf-file_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;The VCF file&lt;/h2&gt;
&lt;p&gt;A VCF file (Variant Call Format) is a text file containing information about the mutations in our genome. &lt;/p&gt;

&lt;p&gt;The first thing we need to do is generate the VCF file, which on samtools 1.2 is generated using the following command: &lt;code class=&quot;prettyprint&quot;&gt;./samtools mpileup -ugf [reference.fasta]  [sorted.bam] |./bcftools/bcftools call -vmO z -o [output.vcf]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To use GATK we’ll need to generate a .dict and a .fasta.fai file to allow efficient random access to the reference. To generate the fasta.fai we use the following samtools command &lt;code class=&quot;prettyprint&quot;&gt;samtools faidx reference.fa&lt;/code&gt; and to generate the .dict we use the following Picard command &lt;code class=&quot;prettyprint&quot;&gt;java -jar CreateSequenceDictionary.jar -REFERENCE=reference.fa -OUTPUT=reference.dict&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we’ll use the dbsnp file we downloaded at the beginning to annotate the VCF file (and add the rsID for the mutations that are both in our VCF and the dbsnp, to do that we run the following GATK command &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar GenomeAnalysisTK.jar -R [ref.fasta] -T VariantAnnotator -o [output.vcf] --variant [input.vcf] --dbsnp [dbsnp.vcf]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Next we’ll run variant filtration to create a couple of filters that tell us how confident we are on the mutation; to do that we run the following GATK command `&lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar GenomeAnalysisTK.jar    -R [reference.fasta]    -T VariantFiltration    -o [output.vcf] --variant [input.vcf]   --filterExpression &quot;DP &amp;gt; 10 &amp;amp;&amp;amp; DP &amp;lt; 25&quot; --filterName &quot;low&quot; --filterExpression &quot;DP &amp;gt; 25 &amp;amp;&amp;amp; DP &amp;lt; 50&quot; --filterName &quot;mid&quot; --filterExpression &quot;DP &amp;gt; 50 &amp;amp;&amp;amp; DP &amp;lt; 150&quot; --filterName &quot;high&quot; --filterExpression &quot;DP &amp;gt; 150&quot; --filterName &quot;Xtreme&quot; --filterExpression &quot;DP &amp;lt; 10&quot; --filterName &quot;PASS&quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;troubleshooting_3&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#troubleshooting_3&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Troubleshooting&lt;/h3&gt;
&lt;p&gt;If you can’t run variant annotator because the variant contigs are not the same as the reference contigs run the following (with picard 1.121 or greater) &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx2g -jar picard.jar SortVcf INPUT=[input.vcf] OUTPUT=[output.vcf] SEQUENCE_DICTIONARY=[reference.fasta]&lt;/code&gt; Then you might have to edit the output vcf and remove the #contigs from the header.&lt;/p&gt;
&lt;h2 id=&quot;functional-predictions-with-snpeffgatk_2&quot;&gt;
&lt;a class=&quot;head_anchor&quot; href=&quot;#functional-predictions-with-snpeffgatk_2&quot; rel=&quot;nofollow&quot;&gt; &lt;/a&gt;Functional predictions with SnpEFF/GATK&lt;/h2&gt;
&lt;p&gt;Finally we’ll use SnpEFF and GATK to generate some functional predictions. We just need two commands to do this: &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]G -jar snpEff.jar  -c snpEff.config -v -o gatk hg19 [input.vcf] &amp;gt; [output.snpeff.vcf]&lt;/code&gt; (run with snpEFF) and with GATK &lt;code class=&quot;prettyprint&quot;&gt;java -Xmx[memory]g -jar GenomeAnalysisTK.jar -T VariantAnnotator -R [ref.fasta] -A SnpEff --variant [input.vcf (same input than the last algorithm)] --snpEffFile [input.snpeff.vcf] -L [input.vcf] -o [output.gatk.vcf]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;At the end your VCF should look similar to this: &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/270jxqp31gnxba.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/270jxqp31gnxba_small.png&quot; alt=&quot;Screen Shot 2015-03-12 at 6.36.02 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the SnpEFF output should look similar to this: &lt;a href=&quot;http://materechm.github.io/Bioinformatics/snpEFF_summary.html&quot; rel=&quot;nofollow&quot;&gt;http://materechm.github.io/Bioinformatics/snpEFF_summary.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can get a lot of information from the SnpEFF output, for example I decided to look into ALS and AD mutations and generated a table and a graph with the number of mutations in some genes associated these diseases divided by their functional impact. You can see the table and graph below: &lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/cqyf3nu9cwmsq.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/cqyf3nu9cwmsq_small.png&quot; alt=&quot;Screen Shot 2015-03-12 at 1.35.11 PM.png&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://svbtleusercontent.com/1p2su0nijoria.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;https://svbtleusercontent.com/1p2su0nijoria_small.png&quot; alt=&quot;Screen Shot 2015-03-12 at 1.37.58 PM.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>jamie</name></author><category term="blog" /><category term="Bioinformatics" /><summary type="html">Here I will walk you through how to take reads from a sequencer and assemble/map a genome and generate a VCF file + do some functional predictions.</summary></entry></feed>